<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: a49f9fb1-8133-4a22-b2a3-bbb9785d28fa-01
 * Migration datetime: 2021-05-17 08:15:59.610409
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations01HVProject2021051708155961 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('hv_task', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->longText('notes')->nullable(true);
            $table->dateTime('start_at')->nullable(true);
            $table->dateTime('end_at')->nullable(true);
            $table->float('effort', 11, 2)->nullable(true)->unsigned();
            $table->string('effort_unit', 10)->nullable(true)->default('h');
            $table->float('duration', 11, 2)->nullable(true)->unsigned();
            $table->string('duration_unit', 10)->nullable(true)->default('h');
            $table->float('percent_done', 11, 2)->nullable(true)->unsigned();
            $table->string('scheduling_mode', 30)->nullable(true);
            $table->dateTime('baseline_start_at')->nullable(true);
            $table->dateTime('baseline_end_at')->nullable(true);
            $table->float('baseline_percent_done', 11, 2)->nullable(true);
            $table->string('constraint_type', 30)->nullable(true);
            $table->dateTime('constraint_at')->nullable(true);
            $table->boolean('manually_scheduled')->nullable(true);
            $table->boolean('draggable')->nullable(true)->default(1);
            $table->boolean('resizable')->nullable(true)->default(1);
            $table->boolean('rollup')->nullable(true)->default(0);
            $table->string('cls', 30)->nullable(true);
            $table->string('color', 10)->nullable(true);
            $table->boolean('show_in_timeline')->nullable(true)->default(0);
            $table->boolean('leaf')->nullable(true)->default(0);
            $table->bigInteger('idx')->nullable(true)->default(0)->unsigned();
            $table->boolean('expanded')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_task_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_project_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_project', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->string('description', 240)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_project_type_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_project_status_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_task_assignment', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->integer('units')->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_project_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_task_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_user_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_task_dependency', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_project_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_from_task_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_to_task_id')->nullable(true)->unsigned();
            $table->bigInteger('dependency_type')->nullable(true);
            $table->string('cls', 30)->nullable(true);
            $table->float('lag', 11, 2)->nullable(true)->unsigned();
            $table->string('lag_unit', 10)->nullable(true)->default('d');
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_task_segment', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('cls', 30)->nullable(true);
            $table->dateTime('start_at')->nullable(true);
            $table->dateTime('end_at')->nullable(true);
            $table->float('duration', 11, 2)->nullable(true)->unsigned();
            $table->string('duration_unit', 10)->nullable(true)->default('h');
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_project_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_task_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_task_definition', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->string('description', 240)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_task_field', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->integer('sort_id')->nullable(true);
            $table->string('ident', 60)->nullable(true);
            $table->string('description', 240)->nullable(true);
            $table->boolean('is_needed')->nullable(true)->default(0);
            $table->boolean('is_readonly')->nullable(true)->default(0);
            $table->integer('input_len')->nullable(true);
            $table->string('input_format', 10)->nullable(true);
            $table->longText('default')->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_task_definition_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_field_type_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_field_type', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->string('enum', 20)->nullable(true);
            $table->integer('input_len')->nullable(true);
            $table->string('input_format', 10)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_project_type', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 80)->nullable(true);
            $table->string('description', 80)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('hv_project_status', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 80)->nullable(true);
            $table->string('description', 80)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::table('hv_task', function (Blueprint $table) {
            $table->foreign('hv_task_id')->references('id')->on('hv_task');
        });
        Schema::table('hv_task', function (Blueprint $table) {
            $table->foreign('hv_project_id')->references('id')->on('hv_project');
        });
        Schema::table('hv_project', function (Blueprint $table) {
            $table->foreign('hv_project_type_id')->references('id')->on('hv_project_type');
        });
        Schema::table('hv_project', function (Blueprint $table) {
            $table->foreign('hv_project_status_id')->references('id')->on('hv_project_status');
        });
        Schema::table('hv_task_assignment', function (Blueprint $table) {
            $table->foreign('hv_task_id')->references('id')->on('hv_task');
        });
        Schema::table('hv_task_assignment', function (Blueprint $table) {
            $table->foreign('hv_project_id')->references('id')->on('hv_project');
        });
        Schema::table('hv_task_dependency', function (Blueprint $table) {
            $table->foreign('hv_from_task_id')->references('id')->on('hv_task');
        });
        Schema::table('hv_task_dependency', function (Blueprint $table) {
            $table->foreign('hv_to_task_id')->references('id')->on('hv_task');
        });
        Schema::table('hv_task_dependency', function (Blueprint $table) {
            $table->foreign('hv_project_id')->references('id')->on('hv_project');
        });
        Schema::table('hv_task_segment', function (Blueprint $table) {
            $table->foreign('hv_task_id')->references('id')->on('hv_task');
        });
        Schema::table('hv_task_segment', function (Blueprint $table) {
            $table->foreign('hv_project_id')->references('id')->on('hv_project');
        });
        Schema::table('hv_task_field', function (Blueprint $table) {
            $table->foreign('hv_task_definition_id')->references('id')->on('hv_task_definition');
        });
        Schema::table('hv_task_field', function (Blueprint $table) {
            $table->foreign('hv_field_type_id')->references('id')->on('hv_field_type');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        if (Schema::hasTable('hv_task_field')) {
            Schema::table('hv_task_field', function (Blueprint $table) {
                $table->dropForeign(['hv_field_type_id']);
            });
        }
        if (Schema::hasTable('hv_task_field')) {
            Schema::table('hv_task_field', function (Blueprint $table) {
                $table->dropForeign(['hv_task_definition_id']);
            });
        }
        if (Schema::hasTable('hv_task_segment')) {
            Schema::table('hv_task_segment', function (Blueprint $table) {
                $table->dropForeign(['hv_project_id']);
            });
        }
        if (Schema::hasTable('hv_task_segment')) {
            Schema::table('hv_task_segment', function (Blueprint $table) {
                $table->dropForeign(['hv_task_id']);
            });
        }
        if (Schema::hasTable('hv_task_dependency')) {
            Schema::table('hv_task_dependency', function (Blueprint $table) {
                $table->dropForeign(['hv_project_id']);
            });
        }
        if (Schema::hasTable('hv_task_dependency')) {
            Schema::table('hv_task_dependency', function (Blueprint $table) {
                $table->dropForeign(['hv_to_task_id']);
            });
        }
        if (Schema::hasTable('hv_task_dependency')) {
            Schema::table('hv_task_dependency', function (Blueprint $table) {
                $table->dropForeign(['hv_from_task_id']);
            });
        }
        if (Schema::hasTable('hv_task_assignment')) {
            Schema::table('hv_task_assignment', function (Blueprint $table) {
                $table->dropForeign(['hv_project_id']);
            });
        }
        if (Schema::hasTable('hv_task_assignment')) {
            Schema::table('hv_task_assignment', function (Blueprint $table) {
                $table->dropForeign(['hv_task_id']);
            });
        }
        if (Schema::hasTable('hv_project')) {
            Schema::table('hv_project', function (Blueprint $table) {
                $table->dropForeign(['hv_project_status_id']);
            });
        }
        if (Schema::hasTable('hv_project')) {
            Schema::table('hv_project', function (Blueprint $table) {
                $table->dropForeign(['hv_project_type_id']);
            });
        }
        if (Schema::hasTable('hv_task')) {
            Schema::table('hv_task', function (Blueprint $table) {
                $table->dropForeign(['hv_project_id']);
            });
        }
        if (Schema::hasTable('hv_task')) {
            Schema::table('hv_task', function (Blueprint $table) {
                $table->dropForeign(['hv_task_id']);
            });
        }
        Schema::dropIfExists('hv_project_status');
        Schema::dropIfExists('hv_project_type');
        Schema::dropIfExists('hv_field_type');
        Schema::dropIfExists('hv_task_field');
        Schema::dropIfExists('hv_task_definition');
        Schema::dropIfExists('hv_task_segment');
        Schema::dropIfExists('hv_task_dependency');
        Schema::dropIfExists('hv_task_assignment');
        Schema::dropIfExists('hv_project');
        Schema::dropIfExists('hv_task');
    }
}
