<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: a49f9fb1-8133-4a22-b2a3-bbb9785d28fa-01
 * Migration datetime: 2021-05-17 08:15:59.610409
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations01MSH2021051708155961 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('msh_customer_address', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('uuid', 64)->nullable(true);
            $table->string('ident', 20)->nullable(true);
            $table->string('salutation', 40)->nullable(true);
            $table->string('company', 80)->nullable(true);
            $table->string('firstname', 80)->nullable(true);
            $table->string('lastname', 80)->nullable(true);
            $table->string('addon', 80)->nullable(true);
            $table->string('addon_1', 80)->nullable(true);
            $table->string('addon_2', 80)->nullable(true);
            $table->string('addon_3', 80)->nullable(true);
            $table->string('street', 80)->nullable(true);
            $table->string('country_ident', 10)->nullable(true);
            $table->string('zip', 10)->nullable(true);
            $table->string('city', 80)->nullable(true);
            $table->string('contact_person', 80)->nullable(true);
            $table->string('phone', 80)->nullable(true);
            $table->string('email', 240)->nullable(true);
            $table->string('web', 80)->nullable(true);
            $table->longText('technician_info')->nullable(true);
            $table->string('ticket_email', 240)->nullable(true);
            $table->string('software_version', 240)->nullable(true);
            $table->boolean('fhp')->nullable(true)->default(0);
            $table->string('ticket_email_subject', 250)->nullable(true);
            $table->boolean('managed')->nullable(true)->default(0);
            $table->string('cardreader_manufacturer', 60)->nullable(true);
            $table->string('cardreader_version', 60)->nullable(true);
            $table->boolean('cardreader_customer_special')->nullable(true)->default(0);
            $table->string('cardreader_customer_version', 120)->nullable(true);
            $table->tinyInteger('sync_flag')->nullable(true)->unsigned();
            $table->boolean('is_hidden')->nullable(true)->default(0)->unsigned();
            $table->float('lat', 12, 7)->nullable(true);
            $table->float('lon', 12, 7)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_delivery_address_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_sla_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['hv_company_id','ident'], 'idx_1');
            $table->index(['lastname','hv_company_id'], 'idx_2');
        });
        Schema::create('msh_delivery_address', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('uuid', 64)->nullable(true);
            $table->bigInteger('ext_id')->default(0)->unsigned();
            $table->bigInteger('ident')->default(0)->unsigned();
            $table->string('customer_ident', 20)->nullable(true);
            $table->string('salutation', 40)->nullable(true);
            $table->string('company', 80)->nullable(true);
            $table->string('firstname', 80)->nullable(true);
            $table->string('lastname', 80)->nullable(true);
            $table->string('addon', 80)->nullable(true);
            $table->string('addon_1', 80)->nullable(true);
            $table->string('addon_2', 80)->nullable(true);
            $table->string('addon_3', 80)->nullable(true);
            $table->string('street', 80)->nullable(true);
            $table->string('country_ident', 10)->nullable(true);
            $table->string('zip', 10)->nullable(true);
            $table->string('city', 80)->nullable(true);
            $table->string('contact_person', 80)->nullable(true);
            $table->string('phone', 80)->nullable(true);
            $table->string('email', 240)->nullable(true);
            $table->string('web', 80)->nullable(true);
            $table->string('department', 30)->nullable(true);
            $table->string('location_shortcut', 30)->nullable(true);
            $table->string('master', 80)->nullable(true);
            $table->tinyInteger('sync_flag')->nullable(true)->unsigned();
            $table->boolean('is_hidden')->nullable(true)->default(0)->unsigned();
            $table->float('lat', 12, 7)->nullable(true);
            $table->float('lon', 12, 7)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_sla_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['hv_company_id','ident'], 'idx_1');
            $table->index(['lastname','hv_company_id'], 'idx_2');
        });
        Schema::create('msh_system', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('uuid', 64)->nullable(true);
            $table->bigInteger('ext_id')->default(0)->unsigned();
            $table->bigInteger('ext_system_id')->default(0)->unsigned();
            $table->string('serial_number', 80)->nullable(true);
            $table->string('sc_typ', 5)->nullable(true);
            $table->string('item_ident', 30)->nullable(true);
            $table->string('remarks', 2048)->nullable(true);
            $table->dateTime('decay')->nullable(true);
            $table->integer('priority')->nullable(true);
            $table->dateTime('ext_created_at')->nullable(true);
            $table->string('ext_created_by', 2)->nullable(true);
            $table->dateTime('ext_updated_at')->nullable(true);
            $table->string('ext_updated_by', 2)->nullable(true);
            $table->string('location_info', 250)->nullable(true);
            $table->string('software', 80)->nullable(true);
            $table->string('host_name', 120)->nullable(true);
            $table->string('ip_address', 20)->nullable(true);
            $table->string('mac_address', 20)->nullable(true);
            $table->string('firmware_version', 20)->nullable(true);
            $table->string('fleet_location', 80)->nullable(true);
            $table->boolean('customer_warranty')->nullable(true);
            $table->date('customer_warranty_end_at')->nullable(true);
            $table->date('manufacturer_warranty_start_at')->nullable(true);
            $table->date('manufacturer_warranty_end_at')->nullable(true);
            $table->string('fleet_ident', 80)->nullable(true);
            $table->boolean('managed')->nullable(true)->default(0);
            $table->tinyInteger('sync_flag')->nullable(true)->unsigned();
            $table->boolean('is_hidden')->nullable(true)->default(0)->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_delivery_address_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_contract_type_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_model_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_last_system_counter_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_sla_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['hv_company_id','serial_number','host_name'], 'idx_1');
            $table->index(['hv_company_id','fleet_ident'], 'idx_2');
        });
        Schema::create('msh_item', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 30)->nullable(true);
            $table->string('description', 80)->nullable(true);
            $table->string('item_group_ident', 20)->nullable(true);
            $table->string('item_group_name', 80)->nullable(true);
            $table->string('manufacturer_item_ident', 40)->nullable(true);
            $table->decimal('stock', 8, 3)->nullable(true);
            $table->boolean('for_mobile')->nullable(true)->default(0);
            $table->tinyInteger('sync_flag')->nullable(true)->unsigned();
            $table->boolean('is_hidden')->nullable(true)->default(0)->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['hv_company_id','ident'], 'idx_1');
        });
        Schema::create('msh_system_counter', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->dateTime('counter_at')->nullable(true);
            $table->float('total', 10, 2)->nullable(true);
            $table->float('total_mono', 10, 2)->nullable(true);
            $table->float('total_color', 10, 2)->nullable(true);
            $table->float('total_scan', 10, 2)->nullable(true);
            $table->float('pages_a3_mono', 10, 2)->nullable(true);
            $table->float('pages_a3_color', 10, 2)->nullable(true);
            $table->float('pages_a4_mono', 10, 2)->nullable(true);
            $table->float('pages_a4_color', 10, 2)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_system_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['counter_at','msh_system_id'], 'idx_1');
        });
        Schema::create('msh_model', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 80)->nullable(true);
            $table->string('manufacturer', 80)->nullable(true);
            $table->tinyInteger('sync_flag')->nullable(true)->unsigned();
            $table->boolean('is_hidden')->nullable(true)->default(0)->unsigned();
            $table->boolean('is_bsd')->nullable(true)->default(0)->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('supply_black_id')->nullable(true)->unsigned();
            $table->bigInteger('supply_cyan_id')->nullable(true)->unsigned();
            $table->bigInteger('supply_magenta_id')->nullable(true)->unsigned();
            $table->bigInteger('supply_yellow_id')->nullable(true)->unsigned();
            $table->bigInteger('waste_toner_box_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_black_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_cyan_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_magenta_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_yellow_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_2_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_2_black_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_2_cyan_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_2_magenta_id')->nullable(true)->unsigned();
            $table->bigInteger('conductor_2_yellow_id')->nullable(true)->unsigned();
            $table->bigInteger('developer_black_id')->nullable(true)->unsigned();
            $table->bigInteger('developer_color_id')->nullable(true)->unsigned();
            $table->bigInteger('stapels_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['ident','hv_company_id'], 'idx_1');
        });
        Schema::create('msh_ticket', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('parent_ticket_id')->default(0)->unsigned();
            $table->bigInteger('last_ticket_id')->default(0)->unsigned();
            $table->string('ident', 30)->nullable(true);
            $table->string('ext_ident', 30)->nullable(true);
            $table->timestamp('order_date')->nullable(true);
            $table->timestamp('sla_calc_end_at')->nullable(true);
            $table->timestamp('sla_end_at')->nullable(true);
            $table->string('sla_suspend_reason', 240)->nullable(true);
            $table->boolean('sla_do_suspend')->nullable(true)->default(0);
            $table->string('customer_ident', 20)->nullable(true);
            $table->longText('ticket_notes')->nullable(true);
            $table->string('customer_firstname', 80)->nullable(true);
            $table->string('customer_lastname', 80)->nullable(true);
            $table->string('customer_street', 80)->nullable(true);
            $table->string('customer_zip', 10)->nullable(true);
            $table->string('customer_city', 80)->nullable(true);
            $table->string('customer_country_ident', 10)->nullable(true);
            $table->string('customer_contact_person', 80)->nullable(true);
            $table->string('customer_phone', 80)->nullable(true);
            $table->string('customer_email', 250)->nullable(true);
            $table->string('customer_ticket_ident', 250)->nullable(true);
            $table->boolean('fhp')->nullable(true)->default(0);
            $table->string('destination_lastname', 80)->nullable(true);
            $table->string('destination_firstname', 80)->nullable(true);
            $table->string('destination_street', 80)->nullable(true);
            $table->string('destination_zip', 10)->nullable(true);
            $table->string('destination_city', 80)->nullable(true);
            $table->string('destination_country_ident', 10)->nullable(true);
            $table->string('destination_contact_person', 80)->nullable(true);
            $table->string('destination_phone', 80)->nullable(true);
            $table->string('destination_email', 240)->nullable(true);
            $table->string('destination_department', 30)->nullable(true);
            $table->float('destination_lat', 12, 7)->nullable(true);
            $table->float('destination_lon', 12, 7)->nullable(true);
            $table->string('new_lastname', 80)->nullable(true);
            $table->string('new_firstname', 80)->nullable(true);
            $table->string('new_street', 80)->nullable(true);
            $table->string('new_zip', 10)->nullable(true);
            $table->string('new_city', 80)->nullable(true);
            $table->string('new_country_ident', 10)->nullable(true);
            $table->longText('technician_info')->nullable(true);
            $table->longText('internal_comment')->nullable(true);
            $table->string('ticket_email', 240)->nullable(true);
            $table->string('serial_number', 80)->nullable(true);
            $table->string('model_ident', 80)->nullable(true);
            $table->string('location_info', 250)->nullable(true);
            $table->string('software', 80)->nullable(true);
            $table->string('host_name', 120)->nullable(true);
            $table->string('manufacturer_warranty_ident', 250)->nullable(true);
            $table->date('manufacturer_warranty_end_at')->nullable(true);
            $table->boolean('customer_warranty')->nullable(true)->default(0);
            $table->date('customer_warranty_end_at')->nullable(true);
            $table->date('requested_date_at')->nullable(true);
            $table->tinyInteger('requested_date_type_id')->nullable(true);
            $table->timestamp('planned_start_at')->nullable(true);
            $table->timestamp('planned_end_at')->nullable(true);
            $table->boolean('fixed_date')->nullable(true)->default(0);
            $table->boolean('phone_call')->nullable(true)->default(0);
            $table->timestamp('transmitted_at')->nullable(true);
            $table->timestamp('readed_at')->nullable(true);
            $table->timestamp('assigned_at')->nullable(true);
            $table->timestamp('drive_at')->nullable(true);
            $table->timestamp('cancel_at')->nullable(true);
            $table->timestamp('work_at')->nullable(true);
            $table->timestamp('finish_at')->nullable(true);
            $table->longText('working_report')->nullable(true);
            $table->timestamp('status_type_at')->nullable(true);
            $table->string('serial_change', 80)->nullable(true);
            $table->string('location_change', 240)->nullable(true);
            $table->string('signer', 60)->nullable(true);
            $table->string('signaturefile', 120)->nullable(true);
            $table->integer('milage')->default(0)->unsigned();
            $table->integer('k_value')->default(0)->unsigned();
            $table->integer('c_value')->default(0)->unsigned();
            $table->integer('s_value')->default(0)->unsigned();
            $table->boolean('customer_fault')->nullable(true)->default(0);
            $table->boolean('create_estimate_of_costs')->nullable(true)->default(0);
            $table->boolean('backup_installed')->nullable(true)->default(0);
            $table->string('backup_model_ident', 80)->nullable(true);
            $table->string('backup_serial_number', 80)->nullable(true);
            $table->integer('backup_total_value')->default(0)->unsigned();
            $table->integer('backup_color_value')->default(0)->unsigned();
            $table->boolean('spare_parts_ordered')->nullable(true);
            $table->string('supplier_ticket_ident', 60)->nullable(true);
            $table->boolean('supplier_ticket_closed')->nullable(true)->default(0);
            $table->boolean('is_released')->nullable(true)->default(0);
            $table->boolean('is_booked')->nullable(true)->default(0);
            $table->boolean('mailed')->nullable(true)->default(0);
            $table->boolean('is_qualified')->nullable(true);
            $table->boolean('is_siebel')->nullable(true);
            $table->boolean('is_voucher_mailed')->nullable(true)->default(0);
            $table->boolean('order_type_changed')->nullable(true)->default(0);
            $table->boolean('planned_start_changed')->nullable(true)->default(0);
            $table->boolean('from_lx_api')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('pcts_revisit_type_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_delivery_address_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_system_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_sla_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_order_type_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_contract_type_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_order_status_type_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_system_counter_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_user_id')->nullable(true)->unsigned();
            $table->bigInteger('lx_ticket_status_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_revisit_reason_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->index(['ident','customer_ident','customer_lastname','customer_city','destination_lastname','serial_number','model_ident','backup_serial_number','hv_company_id'], 'idx_1');
            $table->index(['order_date','hv_company_id','pcts_order_status_type_id'], 'idx_2');
            $table->index(['finish_at','hv_company_id','hv_user_id','pcts_order_status_type_id'], 'idx_3');
        });
        Schema::create('msh_ticket_position', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->integer('pos')->default(0);
            $table->string('item_ident', 30)->nullable(true);
            $table->string('manufacturer_item_ident', 40)->nullable(true);
            $table->string('item_description', 200)->nullable(true);
            $table->double('planned_qty', 6, 2)->nullable(true);
            $table->double('qty', 6, 2)->nullable(true);
            $table->double('reorder_qty', 6, 2)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_item_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_ticket_ident', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_supply_order', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('uuid', 64)->nullable(true);
            $table->string('ident', 30)->nullable(true);
            $table->string('ext_ident', 30)->nullable(true);
            $table->timestamp('order_date')->nullable(true);
            $table->string('customer_ident', 20)->nullable(true);
            $table->string('customer_firstname', 80)->nullable(true);
            $table->string('customer_lastname', 80)->nullable(true);
            $table->string('customer_street', 80)->nullable(true);
            $table->string('customer_zip', 10)->nullable(true);
            $table->string('customer_city', 80)->nullable(true);
            $table->string('customer_country_ident', 10)->nullable(true);
            $table->string('customer_contact_person', 80)->nullable(true);
            $table->string('customer_phone', 80)->nullable(true);
            $table->string('customer_email', 250)->nullable(true);
            $table->string('customer_ticket_ident', 250)->nullable(true);
            $table->string('destination_lastname', 80)->nullable(true);
            $table->string('destination_firstname', 80)->nullable(true);
            $table->string('destination_street', 80)->nullable(true);
            $table->string('destination_zip', 10)->nullable(true);
            $table->string('destination_city', 80)->nullable(true);
            $table->string('destination_country_ident', 10)->nullable(true);
            $table->string('destination_contact_person', 80)->nullable(true);
            $table->string('destination_phone', 80)->nullable(true);
            $table->string('destination_email', 240)->nullable(true);
            $table->string('destination_department', 30)->nullable(true);
            $table->float('destination_lat', 12, 7)->nullable(true);
            $table->float('destination_lon', 12, 7)->nullable(true);
            $table->string('serial_number', 80)->nullable(true);
            $table->string('model_ident', 80)->nullable(true);
            $table->string('location_info', 250)->nullable(true);
            $table->string('host_name', 120)->nullable(true);
            $table->integer('k_value')->default(0)->unsigned();
            $table->integer('c_value')->default(0)->unsigned();
            $table->integer('s_value')->default(0)->unsigned();
            $table->longText('internal_comment')->nullable(true);
            $table->boolean('is_released')->nullable(true)->default(0);
            $table->boolean('is_booked')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->integer('msh_supply_order_status_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_delivery_address_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_system_id')->nullable(true)->unsigned();
            $table->bigInteger('pcts_contract_type_id')->nullable(true)->unsigned();
            $table->bigInteger('supply_black_id')->nullable(true)->unsigned();
            $table->integer('supply_black_qty')->nullable(true)->default(0)->unsigned();
            $table->string('supply_black_serial_ident', 30)->nullable(true);
            $table->bigInteger('supply_cyan_id')->nullable(true)->unsigned();
            $table->integer('supply_cyan_qty')->nullable(true)->default(0)->unsigned();
            $table->string('supply_cyan_serial_ident', 30)->nullable(true);
            $table->bigInteger('supply_magenta_id')->nullable(true)->unsigned();
            $table->integer('supply_magenta_qty')->nullable(true)->default(0)->unsigned();
            $table->string('supply_magenta_serial_ident', 30)->nullable(true);
            $table->bigInteger('supply_yellow_id')->nullable(true)->unsigned();
            $table->integer('supply_yellow_qty')->nullable(true)->default(0)->unsigned();
            $table->string('supply_yellow_serial_ident', 30)->nullable(true);
            $table->bigInteger('waste_toner_box_id')->nullable(true)->unsigned();
            $table->integer('waste_toner_box_qty')->nullable(true)->default(0)->unsigned();
            $table->string('waste_toner_box_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_id')->nullable(true)->unsigned();
            $table->integer('conductor_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_black_id')->nullable(true)->unsigned();
            $table->integer('conductor_black_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_black_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_cyan_id')->nullable(true)->unsigned();
            $table->integer('conductor_cyan_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_cyan_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_magenta_id')->nullable(true)->unsigned();
            $table->integer('conductor_magenta_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_magenta_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_yellow_id')->nullable(true)->unsigned();
            $table->integer('conductor_yellow_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_yellow_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_2_id')->nullable(true)->unsigned();
            $table->integer('conductor_2_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_2_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_2_black_id')->nullable(true)->unsigned();
            $table->integer('conductor_2_black_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_2_black_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_2_cyan_id')->nullable(true)->unsigned();
            $table->integer('conductor_2_cyan_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_2_cyan_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_2_magenta_id')->nullable(true)->unsigned();
            $table->integer('conductor_2_magenta_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_2_magenta_serial_ident', 30)->nullable(true);
            $table->bigInteger('conductor_2_yellow_id')->nullable(true)->unsigned();
            $table->integer('conductor_2_yellow_qty')->nullable(true)->default(0)->unsigned();
            $table->string('conductor_2_yellow_serial_ident', 30)->nullable(true);
            $table->bigInteger('developer_black_id')->nullable(true)->unsigned();
            $table->integer('developer_black_qty')->nullable(true)->default(0)->unsigned();
            $table->string('developer_black_serial_ident', 30)->nullable(true);
            $table->bigInteger('developer_color_id')->nullable(true)->unsigned();
            $table->integer('developer_color_qty')->nullable(true)->default(0)->unsigned();
            $table->string('developer_color_serial_ident', 30)->nullable(true);
            $table->bigInteger('stapels_id')->nullable(true)->unsigned();
            $table->integer('stapels_qty')->nullable(true)->default(0)->unsigned();
            $table->string('supply_info', 1024)->nullable(true);
            $table->integer('pages_total')->nullable(true)->default(0)->unsigned();
            $table->integer('pages_color')->nullable(true)->default(0)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_ticket_note_type', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->string('description', 240)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_ticket_note', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->longText('notes')->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_ticket_note_type_id')->nullable(true)->unsigned();
            $table->bigInteger('msh_ticket_id')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
        });
        Schema::create('msh_ticket_history', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('attribute', 120)->nullable(true);
            $table->longText('old_value')->nullable(true);
            $table->longText('new_value')->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_ticket_binary', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('filename', 240)->nullable(true);
            $table->string('filename_org', 240)->nullable(true);
            $table->boolean('send_to_customer')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_ticket', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('serial_number', 80)->nullable(true);
            $table->string('product_identifier', 40)->nullable(true);
            $table->string('call_number', 40)->nullable(true);
            $table->string('activity_number', 40)->nullable(true);
            $table->timestamp('integration_creation_at')->nullable(true);
            $table->string('filename', 300)->nullable(true);
            $table->string('status_type', 30)->nullable(true);
            $table->timestamp('status_type_at')->nullable(true);
            $table->timestamp('last_transmit_at')->nullable(true);
            $table->integer('mono_counter')->nullable(true);
            $table->integer('color_counter')->nullable(true);
            $table->timestamp('start_at')->nullable(true);
            $table->timestamp('finish_at')->nullable(true);
            $table->string('action_status', 30)->nullable(true);
            $table->longText('action_narrative')->nullable(true);
            $table->string('resolution_code', 40)->nullable(true);
            $table->string('technician', 60)->nullable(true);
            $table->string('supplies_used_indicator', 10)->nullable(true)->default('0');
            $table->string('actual_failure_code', 120)->nullable(true);
            $table->string('attr_asset_type', 30)->nullable(true);
            $table->string('device_condition', 30)->nullable(true);
            $table->boolean('is_released')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_ticket_log', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('hv_company_id')->unsigned();
            $table->string('direction', 10)->nullable(true);
            $table->string('status_type', 30)->nullable(true);
            $table->timestamp('status_type_at')->nullable(true);
            $table->timestamp('eta_at')->nullable(true);
            $table->longText('raw')->nullable(true);
            $table->boolean('transmitted')->nullable(true);
            $table->timestamp('transmitted_at')->nullable(true);
            $table->bigInteger('msh_lx_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_action_status', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_activity_sub_status', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_activity_type', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_actual_failure', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_asset_type', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_device_condition', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_part_deposition', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_service_action_resolution_code', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_service_error_code_1', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_service_error_code_2', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_problem_level_code', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident_1', 40)->nullable(true);
            $table->string('ident_2', 40)->nullable(true);
            $table->string('ident_3', 40)->nullable(true);
            $table->string('ident_4', 40)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_lx_ticket_position', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('product_ident', 40)->nullable(true);
            $table->string('product_name', 80)->nullable(true);
            $table->string('part_disposition', 40)->nullable(true);
            $table->string('service_error_code_1', 250)->nullable(true);
            $table->string('service_error_code_2', 250)->nullable(true);
            $table->boolean('is_lx_item')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_lx_ticket_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_stock', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 60)->nullable(true);
            $table->string('name', 80)->nullable(true);
            $table->string('street', 80)->nullable(true);
            $table->string('zip', 10)->nullable(true);
            $table->string('city', 80)->nullable(true);
            $table->string('contact_person', 80)->nullable(true);
            $table->string('phone', 80)->nullable(true);
            $table->string('email', 240)->nullable(true);
            $table->float('lat', 12, 7)->nullable(true);
            $table->float('lon', 12, 7)->nullable(true);
            $table->boolean('is_blocked')->nullable(true)->default(0);
            $table->boolean('is_user')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('hv_country_id')->nullable(true)->unsigned();
            $table->bigInteger('hv_user_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_customer_it_contact', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('contactname', 60)->nullable(true);
            $table->string('email', 80)->nullable(true);
            $table->string('phone', 60)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_customer_password', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('ident', 40)->nullable(true);
            $table->string('username', 40)->nullable(true);
            $table->string('pw', 40)->nullable(true);
            $table->string('notes', 120)->nullable(true);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('msh_customer_firmware_freeze', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('model', 60)->nullable(true);
            $table->string('version', 60)->nullable(true);
            $table->boolean('is_freezed')->nullable(true)->default(0);
            $table->bigInteger('hv_company_id')->unsigned();
            $table->bigInteger('msh_customer_address_id')->nullable(true)->unsigned();
            $table->bigInteger('created_by')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->bigInteger('updated_by')->nullable(true)->unsigned();
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::table('msh_customer_address', function (Blueprint $table) {
            $table->foreign('msh_delivery_address_id')->references('id')->on('msh_delivery_address');
        });
        Schema::table('msh_delivery_address', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_system', function (Blueprint $table) {
            $table->foreign('msh_delivery_address_id')->references('id')->on('msh_delivery_address');
        });
        Schema::table('msh_system', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_system', function (Blueprint $table) {
            $table->foreign('msh_model_id')->references('id')->on('msh_model');
        });
        Schema::table('msh_system', function (Blueprint $table) {
            $table->foreign('msh_last_system_counter_id')->references('id')->on('msh_system_counter');
        });
        Schema::table('msh_system_counter', function (Blueprint $table) {
            $table->foreign('msh_system_id')->references('id')->on('msh_system');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('supply_black_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('supply_cyan_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('supply_magenta_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('supply_yellow_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_black_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_cyan_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_magenta_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_yellow_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('waste_toner_box_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('stapels_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_2_black_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_2_cyan_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_2_magenta_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_2_yellow_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('conductor_2_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('developer_black_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_model', function (Blueprint $table) {
            $table->foreign('developer_color_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_ticket', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_ticket', function (Blueprint $table) {
            $table->foreign('msh_delivery_address_id')->references('id')->on('msh_delivery_address');
        });
        Schema::table('msh_ticket', function (Blueprint $table) {
            $table->foreign('msh_system_id')->references('id')->on('msh_system');
        });
        Schema::table('msh_ticket', function (Blueprint $table) {
            $table->foreign('msh_system_counter_id')->references('id')->on('msh_system_counter');
        });
        Schema::table('msh_ticket_position', function (Blueprint $table) {
            $table->foreign('msh_ticket_id')->references('id')->on('msh_ticket');
        });
        Schema::table('msh_ticket_position', function (Blueprint $table) {
            $table->foreign('msh_item_id')->references('id')->on('msh_item');
        });
        Schema::table('msh_supply_order', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_supply_order', function (Blueprint $table) {
            $table->foreign('msh_delivery_address_id')->references('id')->on('msh_delivery_address');
        });
        Schema::table('msh_supply_order', function (Blueprint $table) {
            $table->foreign('msh_system_id')->references('id')->on('msh_system');
        });
        Schema::table('msh_ticket_note', function (Blueprint $table) {
            $table->foreign('msh_ticket_note_type_id')->references('id')->on('msh_ticket_note_type');
        });
        Schema::table('msh_ticket_note', function (Blueprint $table) {
            $table->foreign('msh_ticket_id')->references('id')->on('msh_ticket');
        });
        Schema::table('msh_ticket_history', function (Blueprint $table) {
            $table->foreign('msh_ticket_id')->references('id')->on('msh_ticket');
        });
        Schema::table('msh_ticket_binary', function (Blueprint $table) {
            $table->foreign('msh_ticket_id')->references('id')->on('msh_ticket');
        });
        Schema::table('msh_lx_ticket', function (Blueprint $table) {
            $table->foreign('msh_ticket_id')->references('id')->on('msh_ticket');
        });
        Schema::table('msh_lx_ticket_log', function (Blueprint $table) {
            $table->foreign('msh_lx_ticket_id')->references('id')->on('msh_lx_ticket');
        });
        Schema::table('msh_lx_ticket_position', function (Blueprint $table) {
            $table->foreign('msh_lx_ticket_id')->references('id')->on('msh_lx_ticket');
        });
        Schema::table('msh_customer_it_contact', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_customer_password', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
        Schema::table('msh_customer_firmware_freeze', function (Blueprint $table) {
            $table->foreign('msh_customer_address_id')->references('id')->on('msh_customer_address');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        if (Schema::hasTable('msh_customer_firmware_freeze')) {
            Schema::table('msh_customer_firmware_freeze', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_customer_password')) {
            Schema::table('msh_customer_password', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_customer_it_contact')) {
            Schema::table('msh_customer_it_contact', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_lx_ticket_position')) {
            Schema::table('msh_lx_ticket_position', function (Blueprint $table) {
                $table->dropForeign(['msh_lx_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_lx_ticket_log')) {
            Schema::table('msh_lx_ticket_log', function (Blueprint $table) {
                $table->dropForeign(['msh_lx_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_lx_ticket')) {
            Schema::table('msh_lx_ticket', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_binary')) {
            Schema::table('msh_ticket_binary', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_history')) {
            Schema::table('msh_ticket_history', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_note')) {
            Schema::table('msh_ticket_note', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_note')) {
            Schema::table('msh_ticket_note', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_note_type_id']);
            });
        }
        if (Schema::hasTable('msh_supply_order')) {
            Schema::table('msh_supply_order', function (Blueprint $table) {
                $table->dropForeign(['msh_system_id']);
            });
        }
        if (Schema::hasTable('msh_supply_order')) {
            Schema::table('msh_supply_order', function (Blueprint $table) {
                $table->dropForeign(['msh_delivery_address_id']);
            });
        }
        if (Schema::hasTable('msh_supply_order')) {
            Schema::table('msh_supply_order', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_position')) {
            Schema::table('msh_ticket_position', function (Blueprint $table) {
                $table->dropForeign(['msh_item_id']);
            });
        }
        if (Schema::hasTable('msh_ticket_position')) {
            Schema::table('msh_ticket_position', function (Blueprint $table) {
                $table->dropForeign(['msh_ticket_id']);
            });
        }
        if (Schema::hasTable('msh_ticket')) {
            Schema::table('msh_ticket', function (Blueprint $table) {
                $table->dropForeign(['msh_system_counter_id']);
            });
        }
        if (Schema::hasTable('msh_ticket')) {
            Schema::table('msh_ticket', function (Blueprint $table) {
                $table->dropForeign(['msh_system_id']);
            });
        }
        if (Schema::hasTable('msh_ticket')) {
            Schema::table('msh_ticket', function (Blueprint $table) {
                $table->dropForeign(['msh_delivery_address_id']);
            });
        }
        if (Schema::hasTable('msh_ticket')) {
            Schema::table('msh_ticket', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['developer_color_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['developer_black_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_2_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_2_yellow_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_2_magenta_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_2_cyan_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_2_black_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['stapels_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['waste_toner_box_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_yellow_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_magenta_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_cyan_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_black_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['conductor_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['supply_yellow_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['supply_magenta_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['supply_cyan_id']);
            });
        }
        if (Schema::hasTable('msh_model')) {
            Schema::table('msh_model', function (Blueprint $table) {
                $table->dropForeign(['supply_black_id']);
            });
        }
        if (Schema::hasTable('msh_system_counter')) {
            Schema::table('msh_system_counter', function (Blueprint $table) {
                $table->dropForeign(['msh_system_id']);
            });
        }
        if (Schema::hasTable('msh_system')) {
            Schema::table('msh_system', function (Blueprint $table) {
                $table->dropForeign(['msh_last_system_counter_id']);
            });
        }
        if (Schema::hasTable('msh_system')) {
            Schema::table('msh_system', function (Blueprint $table) {
                $table->dropForeign(['msh_model_id']);
            });
        }
        if (Schema::hasTable('msh_system')) {
            Schema::table('msh_system', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_system')) {
            Schema::table('msh_system', function (Blueprint $table) {
                $table->dropForeign(['msh_delivery_address_id']);
            });
        }
        if (Schema::hasTable('msh_delivery_address')) {
            Schema::table('msh_delivery_address', function (Blueprint $table) {
                $table->dropForeign(['msh_customer_address_id']);
            });
        }
        if (Schema::hasTable('msh_customer_address')) {
            Schema::table('msh_customer_address', function (Blueprint $table) {
                $table->dropForeign(['msh_delivery_address_id']);
            });
        }
        Schema::dropIfExists('msh_customer_firmware_freeze');
        Schema::dropIfExists('msh_customer_password');
        Schema::dropIfExists('msh_customer_it_contact');
        Schema::dropIfExists('msh_stock');
        Schema::dropIfExists('msh_lx_ticket_position');
        Schema::dropIfExists('msh_lx_problem_level_code');
        Schema::dropIfExists('msh_lx_service_error_code_2');
        Schema::dropIfExists('msh_lx_service_error_code_1');
        Schema::dropIfExists('msh_lx_service_action_resolution_code');
        Schema::dropIfExists('msh_lx_part_deposition');
        Schema::dropIfExists('msh_lx_device_condition');
        Schema::dropIfExists('msh_lx_asset_type');
        Schema::dropIfExists('msh_lx_actual_failure');
        Schema::dropIfExists('msh_lx_activity_type');
        Schema::dropIfExists('msh_lx_activity_sub_status');
        Schema::dropIfExists('msh_lx_action_status');
        Schema::dropIfExists('msh_lx_ticket_log');
        Schema::dropIfExists('msh_lx_ticket');
        Schema::dropIfExists('msh_ticket_binary');
        Schema::dropIfExists('msh_ticket_history');
        Schema::dropIfExists('msh_ticket_note');
        Schema::dropIfExists('msh_ticket_note_type');
        Schema::dropIfExists('msh_supply_order');
        Schema::dropIfExists('msh_ticket_ident');
        Schema::dropIfExists('msh_ticket_position');
        Schema::dropIfExists('msh_ticket');
        Schema::dropIfExists('msh_model');
        Schema::dropIfExists('msh_system_counter');
        Schema::dropIfExists('msh_item');
        Schema::dropIfExists('msh_system');
        Schema::dropIfExists('msh_delivery_address');
        Schema::dropIfExists('msh_customer_address');
    }
}
