<?xml version="1.0" encoding="utf-8"?>
<project name="bryntum-gantt-theme-aria" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <script language="javascript">
        <![CDATA[
            var dir = project.getProperty("basedir"),
                cmdDir = project.getProperty("cmd.dir"),
                cmdLoaded = project.getReference("senchaloader");

            if (!cmdLoaded) {
                function echo(message, file) {
                    var e = project.createTask("echo");
                    e.setMessage(message);
                    if (file) {
                        e.setFile(file);
                    }
                    e.execute();
                };

                if (!cmdDir) {

                    function exec(args) {
                        var process = java.lang.Runtime.getRuntime().exec(args),
                            input = new java.io.BufferedReader(new java.io.InputStreamReader(process.getInputStream())),
                            headerFound = false,
                            line;

                        while (line = input.readLine()) {
                            line = line + '';
                            java.lang.System.out.println(line);
                            if (line.indexOf("Sencha Cmd") > -1) {
                                headerFound = true;
                            }
                            else if (headerFound && !cmdDir) {
                                cmdDir = line;
                                project.setProperty("cmd.dir", cmdDir);
                            }
                        }
                        process.waitFor();
                        return !!cmdDir;
                    }

                    if (!exec(["sencha", "which"])) {
                        var tmpFile = "tmp.sh";
                        echo("source ~/.bash_profile; sencha " + whichArgs.join(" "), tmpFile);
                        exec(["/bin/sh", tmpFile]);
                        new java.io.File(tmpFile)['delete']();
                    }
                }
            }

            if (cmdDir && !project.getTargets().containsKey("init-cmd")) {
                var importDir = project.getProperty("build-impl.dir") ||
                                (cmdDir + "/ant/build/package/build-impl.xml");
                var importTask = project.createTask("import");

                importTask.setOwningTarget(self.getOwningTarget());
                importTask.setLocation(self.getLocation());
                importTask.setFile(importDir);
                importTask.execute();
            }
        ]]>
    </script>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->

    <target name="-compile-sass-rtl-theme" depends="-init-sass-compiler" if="is.theme.package">
        <x-compile refid="${compiler.ref.id}">
            <![CDATA[
            include
                -all
            and
            save
                all
            and
            sass
                -etc=true
                -vars=true
                -class-name-vars=true
                -variable=$image-search-path:'${image.search.path}' !default
                -variable=$theme-name: '${package.name}' !default
                -output=${build.all.rtl.scss}
                -forward=${package.sass.dynamic}
            ${build.all.rtl.scss.rules.filter}
            and
            sass
                -rules=true
                +append
                -output=${build.all.rtl.scss}
            and
            restore
                all
            and
            sass
                -ruby=true
                -output=${build.all.ruby}
            ]]>
        </x-compile>
    </target>

    <target name="-compile-sass-ltr-theme" depends="-init-sass-compiler" if="is.theme.package">
        <x-compile refid="${compiler.ref.id}">
            <![CDATA[
            exclude
                -all
            and
            include
                -not
                -namespace=Ext.rtl
            and
            save
                all
            and
            sass
                -etc=true
                -vars=true
                -class-name-vars=true
                -variable=$image-search-path:'${image.search.path}' !default
                -variable=$theme-name: '${theme.name}' !default
                -output=${build.all.scss}
                -forward=${package.sass.dynamic}
            ${build.all.scss.rules.filter}
            and
            sass
                -rules=true
                +append
                -output=${build.all.scss}
            and
            restore
                all
            and
            sass
                -ruby=true
                -output=${build.all.ruby}
            ]]>
        </x-compile>
    </target>


    <target name="-before-init">
        <if>
            <not>
                <isset property="build.all.scss.rules.filter"/>
            </not>
            <then>
                <property name="build.all.scss.rules.filter" value=""/>
            </then>
        </if>

        <if>
            <not>
                <isset property="build.all.rtl.scss.rules.filter"/>
            </not>
            <then>
                <property name="build.all.rtl.scss.rules.filter" value=""/>
            </then>
        </if>

        <!--
            If we run the package build under the ExtScheduler distribution folder
        -->
        <if>
            <and>
                <available file="${workspace.bryntum.build.dir}" type="dir"/>
            </and>
            <then>
                <!--
                    We need to map "build.web.root" to the parent of the distro root since we have extjs-* folders there
                    and Sencha Cmd tries to reach extjs using URL like http://localhost:1841/extjs-*
                    So we need to either add extra mapping for extjs (which is also possible but requires more code)
                    or simply change "build.web.root" which is done here
                -->
                <dirname property="build.web.root" file="${workspace.dir}"/>
                <x-echo>Web root adjusted to: ${build.web.root}</x-echo>
            </then>
        </if>
    </target>

</project>
